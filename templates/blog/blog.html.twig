{% extends "base.html.twig" %}

{% block title %}
    BlogSymfony | Liste des articles
{% endblock %}

{% block body %}

    <div class="row mb-2">

        {# cet objet 'articles' ne sort pas de null part, c'est ce que le controller a transmit au template, c'est à dire l'ensemble des articles selectionnés en BDD #}
        {# {{ dump(articles) }} #}

        {% for data in articles %}

            {# 'data' ne sort pas de null part, c'est une variable de réception que nous définissons dans la boucle FOR qui receptionne 1 article par tour de boucle FOR #}
            {# {{ dump(data) }} #}

            {# Si il y a une photo en BDD, on définit un col-8 dans la div #}
            {% if data.photo != null %}
                {% set col = 8 %} {# set permet de déclarer des variables en TWIG #}
            {% else %}
                {% set col = 12 %}
            {% endif %}
            
            <div class="col-md-6">
                <div class="row g-0 border rounded overflow-hidden flex-md-row mb-4 shadow-sm position-relative card-blog">
                    <div class="col-{{ col }} p-4 d-flex flex-column position-static">

                        <strong class="d-inline-block mb-2 text-primary">{{ data.category.titre }}</strong>

                        <h3 class="mb-0">{{ data.titre }}</h3>

                        {# Pour la date, ce que retourne la BDD est un objet issu de la classe DateTime, donc on ne pas convertir un objet en une chaine de caractères, pour cela nous devons utiliser la fonction date() de twig #}
                        <div class="mb-1 text-muted">Publié le {{ data.date|date('d/m/Y') }} à {{ data.date|date('H:i:s') }}</div>

                        {# slice(0, 100) : filtre twig qui retourne une partie de la chaine de caractères #}
                        {# striptags : filtre twig qui supprime les balises html #}
                        <p class="card-text mb-auto">{{ data.contenu|slice(0, 150)|striptags }}[..]</p>

                        {# On fournit à la route l'id de l'article à transmettre dans l'url #}
                        {# La route 'blog_show' est une route paramétrée, on doit lui transmettre un id dans l'URL #}
                        <a href="{{ path('blog_show', {'id': data.id}) }}" class="stretched-link">Lire la suite</a>
                    </div>
                    
                    {# si la valeur de la photo dans la BDD est différente de NULL, alors on affiche la photo #}
                    {% if data.photo != null %}

                        <div class="col-4 d-none d-lg-block">

                            <img src="{{ asset('uploads/photos/' ~ data.photo) }}" alt="{{ data.titre }}" class="col-12 img-responsive">

                        </div>

                    {% endif %}
                        
                </div>
            </div>

        {% endfor %}

    </div>
    
{% endblock %}